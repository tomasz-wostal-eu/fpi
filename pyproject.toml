[tool.poetry]
name = "fpi"
version = "0.0.13"
description = ""
authors = ["Tomasz Wostal <tomasz@wostal.eu>"]
readme = "README.md"
packages = [{include = "fpi", from = "src"}]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.115.0"
sqlalchemy = "^2.0.35"
psycopg2-binary = "^2.9.9"
alembic = "^1.13.2"
pydantic = "^2.9.2"
pytest = "^8.3.3"
opentelemetry-api = "^1.27.0"
opentelemetry-sdk = "^1.27.0"
opentelemetry-instrumentation-fastapi = "^0.48b0"

uvicorn = "^0.30.6"
structlog = "^24.4.0"
python-json-logger = "^2.0.7"
opentelemetry-distro = "^0.48b0"
opentelemetry-exporter-otlp = "^1.27.0"
opentelemetry-instrumentation-requests = "^0.48b0"
opentelemetry-instrumentation = "^0.48b0"
opentelemetry-instrumentation-sqlalchemy = "^0.48b0"
opentelemetry-exporter-otlp-proto-http = "^1.27.0"
opentelemetry-exporter-prometheus = "^0.48b0"
prometheus-client = "^0.21.0"
pytest-cov = "^5.0.0"
httpx = "^0.27.2"
bump2version = "^1.0.1"
auto-tag = "^0.8.2"
[tool.poetry.group.dev.dependencies]
pytest-cov = "^5.0.0"

httpx = "^0.27.2"
mypy = "^1.11.2"
checkmate = "^0.2.0"
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
start-fpi = "src.fpi.main:app"

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.mypy]
python_version = "3.10"  # Adjust this to your Python version
check_untyped_defs = true  # Check functions without type annotations
disallow_untyped_calls = true  # Ensure calls to untyped functions raise errors
ignore_missing_imports = true  # Ignore missing imports from third-party libraries
show_error_codes = true  # Helpful when you want to check specific error codes
strict = true  # Use strict mode for more robust type checking
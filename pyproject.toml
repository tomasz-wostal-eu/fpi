[tool.poetry]
name = "fpi"
version = "0.1.0"
description = ""
authors = ["Tomasz Wostal <tomasz@wostal.eu>"]
readme = "README.md"
packages = [{include = "fpi", from = "src"}]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.115.0"
sqlalchemy = "^2.0.35"
psycopg2-binary = "^2.9.9"
alembic = "^1.13.2"
pydantic = "^2.9.2"
pytest = "^8.3.3"
opentelemetry-api = "^1.27.0"
opentelemetry-sdk = "^1.27.0"
opentelemetry-instrumentation-fastapi = "^0.48b0"

uvicorn = "^0.30.6"
structlog = "^24.4.0"
python-json-logger = "^2.0.7"
opentelemetry-distro = "^0.48b0"
opentelemetry-exporter-otlp = "^1.27.0"
opentelemetry-instrumentation-requests = "^0.48b0"
opentelemetry-instrumentation = "^0.48b0"
opentelemetry-instrumentation-sqlalchemy = "^0.48b0"
opentelemetry-exporter-otlp-proto-http = "^1.27.0"
opentelemetry-exporter-prometheus = "^0.48b0"
prometheus-client = "^0.21.0"
pytest-cov = "^5.0.0"
httpx = "^0.27.2"
bump2version = "^1.0.1"
auto-tag = "^0.8.2"
[tool.poetry.group.dev.dependencies]
pytest-cov = "^5.0.0"

httpx = "^0.27.2"
mypy = "^1.11.2"
checkmate = "^0.2.0"
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
start-fpi = "src.fpi.main:app"

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.semantic_release]
assets = []
build_command_env = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
tag_format = "v{version}"
version_variables = ["src/fpi/version.py:__version__"] # we added this

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.branches.dev]
match = "(dev|next)"
prerelease_token = "rc"
prerelease = true

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true


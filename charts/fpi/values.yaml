# Default values for fpi.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 5

image:
  repository: wiking80/fpi
  pullPolicy: IfNotPresent
  tag: v0.0.11

imagePullSecrets: []
nameOverride: "fpi"
fullnameOverride: "fpi"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  instrumentation.opentelemetry.io/inject-python: "true"
  linkerd.io/inject: enabled
podLabels:
  environment: dev

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8000

ingress:
  enabled: true
  className: nginx
  annotations:
    cert-manager.io/cluster-issuer: "devops-local"
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: fpi-dev.devops.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: fpi-dev-tls
      hosts:
        - fpi-dev.devops.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /healthcheck
    port: 8000
  initialDelaySeconds: 60
  periodSeconds: 10
readinessProbe:
  httpGet:
    path: /healthcheck
    port: 8000
  initialDelaySeconds: 60
  periodSeconds: 10

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

postgres:
  name: fpi
  instances: 3
  storage:
    size: 1Gi
  monitoring:
    enablePodMonitor: true
  bootstrap:
    initdb:
      database: fpi
      owner: fpi

serviceMonitor:
  enabled: true   # Set to true to enable the creation of the ServiceMonitor
  port: "metrics"  # The name of the port in the Service exposing metrics
  path: "/metrics" # The metrics path, typically /metrics
  interval: "30s"  # Scrape interval
  scrapeTimeout: "10s"  # Timeout for scraping metrics

prometheus:
  enabled: true
  address: http://prometheus-prometheus.monitoring.svc.cluster.local:9090